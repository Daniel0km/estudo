#include <stdio.h>

#define N 2
#define MAX 1000

// transforma letra em número (A=0 ... Z=25)
int letraNum(char c) {
    return c - 'A';
}

// transforma número em letra (0...25 → A...Z)
char numLetra(int x) {
    return (x % 26 + 26) % 26 + 'A';
}

// conta quantos caracteres tem uma string
int comprimento(char s[]) {
    int i = 0;
    while (s[i] != '\0') {
        i++;
    }
    return i;
}

// converte para maiúscula se for minúscula
char paraMaiuscula(char c) {
    if (c >= 'a' && c <= 'z') {
        return c - 'a' + 'A';
    }
    return c;
}

// vê se é letra
int eLetra(char c) {
    return (c >= 'A' && c <= 'Z') || (c >= 'a' && c <= 'z');
}

// multiplica matriz 2x2 por vetor 2x1
void multiplicar(int M[N][N], int vIn[N], int vOut[N]) {
    int i, j, soma;
    for (i = 0; i < N; i++) {
        soma = 0;
        for (j = 0; j < N; j++) {
            soma = soma + M[i][j] * vIn[j];
        }
        vOut[i] = (soma % 26 + 26) % 26;
    }
}

// cifra ou decifra (depende da matriz que mandar)
void cifra(char txt[], char res[], int M[N][N]) {
    int tam = comprimento(txt);
    int i, j;
    for (i = 0; i < tam; i += N) {
        int vin[N], vout[N];
        for (j = 0; j < N; j++) {
            vin[j] = letraNum(txt[i+j]);
        }
        multiplicar(M, vin, vout);
        for (j = 0; j < N; j++) {
            res[i+j] = numLetra(vout[j]);
        }
    }
    res[tam] = '\0';
}

int inverso(int a) {
    int x;
    a = (a % 26 + 26) % 26;
    for (x = 1; x < 26; x++) {
        if ((a * x) % 26 == 1) return x;
    }
    return -1;
}

// matriz inversa 2x2
void inversa(int M[N][N], int Minv[N][N]) {
    int det = (M[0][0]*M[1][1] - M[0][1]*M[1][0] + 26) % 26;
    int invDet = inverso(det);

    Minv[0][0] =  ( M[1][1] * invDet) % 26;
    Minv[0][1] = (-M[0][1] * invDet + 26) % 26;
    Minv[1][0] = (-M[1][0] * invDet + 26) % 26;
    Minv[1][1] =  ( M[0][0] * invDet) % 26;
}

// prepara texto: só letras, maiúscula, e adiciona X se faltar
void prepara(char entrada[], char saida[]) {
    int i, k = 0;
    for (i = 0; entrada[i] != '\0'; i++) {
        if (eLetra(entrada[i])) {
            saida[k] = paraMaiuscula(entrada[i]);
            k++;
        }
    }
    if (k % N != 0) {
        saida[k] = 'X';
        k++;
    }
    saida[k] = '\0';
}

int main() {
    char texto[MAX];
    char puro[MAX], cifrado[MAX], decifrado[MAX];

    int K[N][N] = { {3, 2}, {5, 7} }; // matriz da chave
    int Kinv[N][N];
    inversa(K, Kinv);

    printf("Digite o texto: ");
    fgets(texto, sizeof(texto), stdin);

    prepara(texto, puro);
    cifra(puro, cifrado, K);
    cifra(cifrado, decifrado, Kinv);

    printf("Cifrado:   %s\n", cifrado);
    printf("Decifrado: %s\n", decifrado);

    return 0;
}
